{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nexport class RegisterusuarioComponent {\n  constructor(formBuilder, http) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      // Define your form fields and validations\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  onSubmit() {\n    if (this.registerForm.invalid) {\n      return;\n    }\n    const formData = this.registerForm.value;\n    this.http.post('http://localhost:3000/usuarios', formData).subscribe(response => {\n      console.log('Post request successful', response);\n    }, error => {\n      console.error('Error occurred:', error);\n    });\n  }\n}\nRegisterusuarioComponent.ɵfac = function RegisterusuarioComponent_Factory(t) {\n  return new (t || RegisterusuarioComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\nRegisterusuarioComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterusuarioComponent,\n  selectors: [[\"app-registerusuario\"]],\n  decls: 9,\n  vars: 0,\n  consts: [[3, \"ngSubmit\"], [\"usersForm\", \"ngForm\"], [\"type\", \"text\", \"name\", \"nombres\"], [\"type\", \"email\", \"name\", \"correo\"], [\"type\", \"text\", \"name\", \"telefono\"], [\"type\", \"text\", \"name\", \"cedula\"], [\"type\", \"password\", \"name\", \"contrasena\"], [\"type\", \"submit\"]],\n  template: function RegisterusuarioComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterusuarioComponent_Template_form_ngSubmit_0_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.getUsersFormData(_r0.value));\n      });\n      i0.ɵɵelement(2, \"input\", 2)(3, \"input\", 3)(4, \"input\", 4)(5, \"input\", 5)(6, \"input\", 6);\n      i0.ɵɵelementStart(7, \"button\", 7);\n      i0.ɵɵtext(8, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AAQnE,OAAM,MAAOC,wBAAwB;EAGnCC,YACUC,WAAwB,EACxBC,IAAgB;IADhB,gBAAW,GAAXD,WAAW;IACX,SAAI,GAAJC,IAAI;EACV;EAEJC,QAAQ;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACzC;MACAC,QAAQ,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MACnCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACU,KAAK,CAAC,CAAC;MACpDC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACY,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9D,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,IAAI,CAACP,YAAY,CAACQ,OAAO,EAAE;MAC7B;;IAGF,MAAMC,QAAQ,GAAG,IAAI,CAACT,YAAY,CAACU,KAAK;IAExC,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAC,gCAAgC,EAAEF,QAAQ,CAAC,CACvDG,SAAS,CACRC,QAAQ,IAAG;MACTC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,QAAQ,CAAC;IAClD,CAAC,EACDG,KAAK,IAAG;MACNF,OAAO,CAACE,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACzC,CAAC,CACF;EACL;;AAjCWrB,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCXrCC,kCAAyE;MAA/CA;QAAAA;QAAA;QAAA,OAAYA,8CAAiC;MAAA,EAAC;MACvEA,2BAAmC;MAUnCA,iCAAsB;MAAAA,sBAAM;MAAAA,iBAAS","names":["Validators","RegisterusuarioComponent","constructor","formBuilder","http","ngOnInit","registerForm","group","username","required","email","password","minLength","onSubmit","invalid","formData","value","post","subscribe","response","console","log","error","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\NW USER\\Desktop\\fullstack NEST ANGULAR BLA BLA\\pets-main\\src\\app\\pages\\registerusuario\\registerusuario.component.ts","C:\\Users\\NW USER\\Desktop\\fullstack NEST ANGULAR BLA BLA\\pets-main\\src\\app\\pages\\registerusuario\\registerusuario.component.html"],"sourcesContent":["import { Component, OnInit  } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Usuario } from './usuario.interface';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-registerusuario',\n  templateUrl: './registerusuario.component.html',\n  styleUrls: ['./registerusuario.component.css']\n})\n\nexport class RegisterusuarioComponent implements OnInit {\n  registerForm!: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient\n  ) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      // Define your form fields and validations\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  onSubmit() {\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    const formData = this.registerForm.value;\n\n    this.http.post('http://localhost:3000/usuarios', formData)\n      .subscribe(\n        response => {\n          console.log('Post request successful', response);\n        },\n        error => {\n          console.error('Error occurred:', error);\n        }\n      );\n  }\n}","<form #usersForm=\"ngForm\" (ngSubmit)=\"getUsersFormData(usersForm.value)\">\n\t<input type=\"text\" name=\"nombres\" >\n  \n\t<input type=\"email\" name=\"correo\" >\n\n\t<input type=\"text\" name=\"telefono\">\n\n\t<input type=\"text\" name=\"cedula\">\n\n\t<input type=\"password\" name=\"contrasena\">\n  \n\t<button type=\"submit\">Submit</button>\n  </form>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}